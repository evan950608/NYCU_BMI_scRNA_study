version
print('abc')
for (i in 1:10){print(i)}
version
# Reference dataset: Monaco immune data (covers typical PBMC)
ref <- MonacoImmuneData()
# Reference dataset: Monaco immune data (covers typical PBMC)
library(celldex)
ref <- MonacoImmuneData()
head(ref)
head(ref)
View(ref)
dim(ref)
ref@colData@rownames
ref@colData@listData[["label.main"]]
ref@colData@listData[["label.fine"]]
ref@NAMES[:20]
ref@NAMES[1:20]
length(ref@NAMES)
table(ref$label)
table(ref@colData@listData[["label.main"]])
# Fine celltypes
table(ref@colData@listData[["label.fine"]])
# Load in Hao PBMC
library(SingleR)
help("SingleR")
help("SingleR")
library(Seurat)
install.packages('Seurat')
install.packages("Seurat")
### Reference dataset: Monaco immune data (covers typical PBMC)
library(celldex)
ref <- MonacoImmuneData()
head(ref)
# Main celltypes
table(ref@colData@listData[["label.main"]])
# Fine celltypes
table(ref@colData@listData[["label.fine"]])
unique(ref@colData@listData[["label.main"]])
unique(ref@colData@listData[["label.fine"]])
View(ref)
ref@colData@listData
# reference dataset celltype hierarchy
ref_celltype = data.frame(label.main = ref@colData@listData[["label.main"]],
label.fine = ref@colData@listData[["label.fine"]])
View(ref_celltype)
ref_celltype = ref_celltype[order(ref_celltype$label.main), ]  # sort by label.main
View(ref_celltype)
ref_celltype_unique = unique(ref_celltype)
View(ref_celltype_unique)
getwd()
setwd("~/GitHub/EvanPys/Progress/PBMC_Hao_GSE/SingleR")
setwd("~/GitHub/EvanPys/Progress/PBMC_Hao_GSE/SingleR")
getwd()
write.csv(ref_celltype_unique, 'Monaco_ref_celltypes.csv')
